/*
 * Copyright (C) 2021 Ilya Usanov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.github.b3er.kmapper.processor.factory

import com.github.b3er.kmapper.processor.utils.toClassName
import com.google.devtools.ksp.symbol.KSClassDeclaration
import com.squareup.kotlinpoet.ClassName
import com.squareup.kotlinpoet.FileSpec

abstract class DeclaredMapperFactory : MapperFactory {
    abstract val declaration: KSClassDeclaration
    val className by lazy { declaration.toClassName() }
    abstract val factoryClassName: ClassName

    override fun write() = FileSpec.builder(factoryClassName.packageName, factoryClassName.simpleName).apply {
        addFileComment("Code generated by KMapper. Do not edit.")
        writeClass()
    }.build()

    abstract fun FileSpec.Builder.writeClass()
}
